{"version":3,"sources":["js/script.js","images/logo_img.jpg","firebase/index.js","constants/action-types.js","actions/index.js","components/UploadContainer.jsx","components/GetImgLink.jsx","components/NavBar.jsx","components/Terms.jsx","components/Main.jsx","reducers.js","store.js","js/index.js","index.js"],"names":["document","addEventListener","module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","storage","ref","ADD_IMAGE","addImage","payload","type","uuidv1","require","connectedUploadContainer","props","state","img","imgOriginName","allowedImageType","allowedImageSize","imgURL","loadingUpload","previewSrc","cancelUpload","loadWhiteProgressSlider","e","inputFile","querySelector","target","value","this","setState","files","name","match","size","reader","FileReader","onload","src","result","readAsDataURL","wrong_format_bgdrop","innerHTML","style","display","maxSizeModalTxt","length","uuid","self","uploadImgPercent","loadPercSlider","uploadTxtDynPerc","uploadingTextPercent","upload_button","uploadTask","put","on","snapshot","cancel","progress","bytesTransferred","totalBytes","Math","round","right","error","console","log","getDownloadURL","then","downloadURL","rejected","wrap_uploadContainer_div","dropZone_div","removeAttribute","drop_img_here_img","setAttribute","wrap_upload_process","border","className","onDrop","getRootProps","getInputProps","onDragEnter","onDragLeave","onDragStart","preventDefault","onChange","handleFormChange","id","accept","htmlFor","onClick","browseImageHandler","title","alt","formHandler","React","Component","UploadContainer","connect","dispatch","ConnectedImgLink","link","linkCopiedTxt","setTimeout","opacity","select","window","open","ViewerLink","HTMLThumblinked","HTMLFullLinked","BBCodeLinked","BBCodeThumbLinked","openImg","text","onCopy","copyTextMsg","readOnly","handleFocus","GetImgLink","NavBar","openAbout","aboutMenu","termsModal","openTermsOfUse","href","Terms","closeTermsOfUse","ConnectedApp","openTerms","closeModal","checkAboutMenu","Main","initialState","unsupportedFormat","rootReducer","action","Object","assign","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5a56626d.chunk.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n\r\n})\r\n\r\n ","module.exports = __webpack_public_path__ + \"static/media/logo_img.904cb526.jpg\";","import 'core-js';\r\n import * as firebase from 'firebase/app';\r\n import 'firebase/storage';\r\n import 'firebase/database';\r\n import 'firebase/auth';\r\n\r\n \r\n\r\n \r\n  var config = {\r\n    apiKey: \"AIzaSyDl1a482YN0XWAd_P7L7zhTaKtMta6hgu0\",\r\n    authDomain: \"uploadimages-8cd3d.firebaseapp.com\",\r\n    databaseURL: \"uploadimages-8cd3d.firebaseio.com/\",\r\n    projectId: \"uploadimages-8cd3d\",\r\n    storageBucket: \"gs://uploadimages-8cd3d.appspot.com\",\r\n    messagingSenderId: \"352007639809\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n\r\n    // storage database\r\n  const storage = firebase.storage();\r\n\r\n      // messages database\r\n  let messagesRef = firebase.database().ref('messages');\r\n\r\n    // get data from database\r\n  let getDataBase = firebase.database();\r\n  let dataRef = getDataBase.ref('messages');\r\n\r\n  // data from current user\r\n\r\n  export {\r\n  \tstorage, firebase, messagesRef, dataRef as default\r\n  }","export const ADD_IMAGE = \"ADD_IMAGE\";\r\n ","import { ADD_IMAGE } from \"../constants/action-types\";\r\n \r\n\r\n\r\n\r\nexport function addImage(payload) {\r\n  return { type: ADD_IMAGE, payload };\r\n}\r\n ","import React from 'react';\r\nimport {storage} from '../firebase/index';\r\nimport '../css/uploadContainer.css';\r\nimport { connect } from \"react-redux\";\r\nimport { addImage } from \"../actions/index\";\r\nimport Dropzone from 'react-dropzone';\r\nconst uuidv1 = require('uuid/v1');\r\n\r\n\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addImage: img => dispatch(addImage(img))\r\n  };\r\n}\r\n\r\n \r\n\r\n\r\nclass connectedUploadContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { \r\n          img: '',\r\n          imgOriginName: false,\r\n          allowedImageType: false,\r\n          allowedImageSize: false,\r\n          imgURL: '',\r\n          loadingUpload: false,\r\n          previewSrc: false,\r\n          cancelUpload: false,\r\n          loadWhiteProgressSlider: false\r\n          }\r\n  }\r\n\r\n \r\n\r\n\r\n\r\nhandleFormChange(e) {\r\n   let inputFile = document.querySelector('.input_file');\r\n \r\n \r\n              // get origin file name\r\n          if(e.target.value) {\r\n            this.setState({ imgOriginName: e.target.files[0].name, cancelUpload: false});\r\n          }\r\n            // handle image type\r\n        if(e.target.value.match(/.png|.PNG|.jpg|.JPG|.jpeg|.JPEG|.bmp|.BMP|.gif|.GIF|.tif|.TIF|.webp|.WEBP|.tif|.TIF/g)) {\r\n          this.setState({ img: e.target.files[0] , allowedImageType: true, loadingUpload: true });\r\n                  // preview image \r\n              if(e.target.files[0].size <= 10000000) {\r\n                    this.setState({ previewSrc: true })\r\n               let reader = new FileReader();\r\n                // get image src to get preview image\r\n                reader.onload = function() {\r\n                   let output = document.querySelector('.preview_upload_img');\r\n                      output.src = reader.result;\r\n              }\r\n              reader.readAsDataURL(e.target.files[0]);\r\n            }\r\n\r\n        } else {\r\n             this.setState({ img: '' , allowedImageType: false, loadingUpload: false });\r\n             // display unsupported format modal\r\n             let wrong_format_bgdrop = document.querySelector('.wrong_format_bgdrop');\r\n             let invalid_format_name = document.querySelector('.invalid_format_name');\r\n             // get file name\r\n             invalid_format_name.innerHTML = e.target.files[0].name;\r\n             // display wrong format modal\r\n             wrong_format_bgdrop.style.display = 'block';\r\n        } \r\n            // handle file size\r\n          if(e.target.files[0] && e.target.files[0].size <= 10000000) {\r\n            this.setState({ allowedImageSize: true})\r\n          } else {\r\n         \r\n            let maxSizeModalTxt = document.querySelector('.invalid_imgsize_big');\r\n            let wrong_format_bgdrop = document.querySelector('.wrong_format_bgdrop');\r\n            let invalid_format_name = document.querySelector('.invalid_format_name');\r\n\r\n                 // get file name\r\n             invalid_format_name.innerHTML = e.target.files[0].name;\r\n                // clear input value\r\n             inputFile.value = '';\r\n                // display img size modal text alert\r\n             maxSizeModalTxt.style.display = 'block';\r\n               // display wrong format modal\r\n             wrong_format_bgdrop.style.display = 'block';\r\n           \r\n            this.setState({ img: '', allowedImageSize: false, loadingUpload: false })\r\n         \r\n        }\r\n       \r\n          if(\r\n           this.state.img.length !== 0 && \r\n           this.state.allowedImageSize && \r\n           this.state.allowedImageType) {\r\n           this.setState({loadingUpload: true })\r\n           \r\n        }   \r\n}\r\n\r\n\r\nformHandler() {\r\n \r\n  let uuid = uuidv1(),\r\n      img = this.state.img,\r\n      self = this,\r\n      uploadImgPercent = document.querySelector('.upload_percent'),\r\n      loadPercSlider = document.querySelector('.loading_percent_slider'),\r\n      uploadTxtDynPerc = document.querySelector('.up_txt_per_din'),\r\n      uploadingTextPercent = document.querySelector('.uploading_txt_percent'),\r\n      upload_button = document.querySelector('.upload_button');\r\n \r\n        // display progress percent text\r\n          uploadingTextPercent.style.display = 'block';\r\n        // hide Browse image button\r\n          upload_button.style.display = 'none';\r\n        \r\n      const uploadTask = storage.ref(`images/${uuid}/${img.name}`).put(img);\r\n  \r\n      uploadTask.on('state_changed', function(snapshot){ \r\n        // cancel the upload\r\n        if(self.state.cancelUpload) {\r\n          uploadTask.cancel();\r\n          // change state to be able to reupload a new image\r\n          self.setState({ cancelUpload: false })\r\n        }\r\n        let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n\r\n          // display progress transparent percent slider over the image\r\n        loadPercSlider.style.display = 'block';\r\n          // display progress over the image\r\n        uploadImgPercent.innerHTML = Math.round(progress)+'%';\r\n          // display progress above image\r\n        uploadTxtDynPerc.innerHTML = Math.round(progress)+'%';\r\n          // animate .white slider over image according to the progress percent\r\n        loadPercSlider.style.right = '-'+progress+'%';\r\n        }, function(error) {\r\n              console.log(error);\r\n        }, function() {\r\n\r\n       uploadTask.snapshot.ref.getDownloadURL()\r\n        .then(function(downloadURL) {\r\n          self.setState({imgURL: downloadURL})\r\n        const { imgURL, loadingUpload } = self.state;\r\n      self.props.addImage({ loadingUpload, imgURL});\r\n\r\n        });\r\n      });\r\n\r\n}\r\n\r\n\r\ncancelUpload() {\r\n      this.setState({ cancelUpload: true, loadingUpload: false, img: '', previewSrc: false  })\r\n        const { loadingUpload, img, } = this.state;\r\n      this.props.addImage({ loadingUpload, img });\r\n}\r\n\r\nonDrop(files, rejected) {\r\n      let  wrap_uploadContainer_div = document.querySelector('.wrap_uploadContainer_div'),\r\n           dropZone_div = document.querySelector('.dropZone_div'),\r\n           drop_img_here_img = document.querySelector('.drop_img_here_img');\r\n      \r\n              // hide 'Drop image here text'\r\n                drop_img_here_img.style.display = 'none';\r\n              // display uploadContainer div\r\n                wrap_uploadContainer_div.style.display = 'block';\r\n              // remove dashed border effect after drop\r\n                dropZone_div.removeAttribute('style');\r\n              // get origin file name\r\n            if(files) {\r\n              this.setState({ imgOriginName: files[0].name, cancelUpload: false });\r\n            }\r\n\r\n            // handle image type\r\n          if(files[0].name.match(/.png|.PNG|.jpg|.JPG|.jpeg|.JPEG|.bmp|.BMP|.gif|.GIF|.tif|.TIF|.webp|.WEBP|.tif|.TIF/g)) {\r\n            this.setState({ img: files[0] , allowedImageType: true, loadingUpload: true });\r\n\r\n                   // preview image \r\n                   if(files[0].size <= 10000000) {\r\n                      this.setState({ previewSrc: true })\r\n                     let reader = new FileReader();\r\n                      // get img src to set the preview image\r\n                    reader.onload = function() {\r\n                      let output = document.querySelector('.preview_upload_img');\r\n                      output.src = reader.result;\r\n                    }\r\n                    reader.readAsDataURL(files[0]);\r\n                  }\r\n\r\n          } else {\r\n                  // IF FILE FORMAT IS NOT SUPPORTED, DISPLAY 'UNSUPPORTED MESSAGE';\r\n                   this.setState({ img: '' , allowedImageType: false, loadingUpload: false });\r\n                     // display unsupported format modal\r\n                     let wrong_format_bgdrop = document.querySelector('.wrong_format_bgdrop');\r\n                     let invalid_format_name = document.querySelector('.invalid_format_name');\r\n                     // get file name\r\n                       invalid_format_name.innerHTML = this.state.imgOriginName;\r\n                     // display wrong format modal\r\n                       wrong_format_bgdrop.style.display = 'block';        \r\n          } \r\n                    // handle file size\r\n                  if(files[0] && files[0].size <= 10000000) {\r\n                    this.setState({ allowedImageSize: true})\r\n          } else {\r\n                     let maxSizeModalTxt = document.querySelector('.invalid_imgsize_big');\r\n                     let wrong_format_bgdrop = document.querySelector('.wrong_format_bgdrop');\r\n                        // display img size modal text alert\r\n                           maxSizeModalTxt.style.display = 'block';\r\n                       // display wrong format modal\r\n                          wrong_format_bgdrop.style.display = 'block';\r\n                       this.setState({ img: '', allowedImageSize: false, loadingUpload: false })\r\n          }\r\n         \r\n          // if selected file has a supported format, display the upload container\r\n            if(\r\n             this.state.img.length !== 0 && \r\n             this.state.allowedImageSize && \r\n             this.state.allowedImageType) {\r\n             this.setState({ loadingUpload: true })\r\n          } \r\n}\r\n\r\n \r\nonDragEnter() {\r\n    let dropZone_div = document.querySelector('.dropZone_div'),\r\n        wrap_uploadContainer_div = document.querySelector('.wrap_uploadContainer_div'),\r\n        drop_img_here_img = document.querySelector('.drop_img_here_img');\r\n\r\n\r\n        // if there is no image selected, display 'Drop here' message\r\n      if(!this.state.img) {\r\n          // hide browse button \r\n         wrap_uploadContainer_div.setAttribute('style', 'display:none;z-index:1');\r\n         // display 'drop here' image and text\r\n         drop_img_here_img.style.display = 'block';\r\n         // display dashed border on the dropzone area\r\n         dropZone_div.setAttribute('style', 'border:solid #83C6E8;border-style:dashed;z-index:2');\r\n       }\r\n\r\n}\r\n\r\n\r\nonDragLeave() {\r\n   let dropZone_div = document.querySelector('.dropZone_div'),\r\n       wrap_upload_process = document.querySelector('.wrap_upload_process'),\r\n       wrap_uploadContainer_div = document.querySelector('.wrap_uploadContainer_div'),\r\n       drop_img_here_img = document.querySelector('.drop_img_here_img');\r\n\r\n      // if there is no image dropped, display the 'Browse image' button\r\n       if(!this.state.img) {\r\n         wrap_uploadContainer_div.style.display = 'block';\r\n         drop_img_here_img.style.display = 'none';\r\n         dropZone_div.style.border = 'none';\r\n         wrap_upload_process.style.display = 'block';\r\n         dropZone_div.removeAttribute('style');\r\n        }\r\n}\r\n\r\nbrowseImageHandler() {\r\n  this.setState({ cancelUpload: false, img: '', imgURL: '' , imgOriginName: ''})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n          <div>\r\n                {/* ------- Dropzone container ----------- */}\r\n\r\n               <div className='row justify-content-center'>\r\n                     <Dropzone onDrop={(e) => this.onDrop(e)}>\r\n                          {({ getRootProps, getInputProps }) => (\r\n                            <div\r\n                            {...getRootProps()}\r\n                            className='dropZone_div'\r\n                            onDragEnter={() => this.onDragEnter()}\r\n                            onDragLeave={() => this.onDragLeave()}>\r\n                            </div>\r\n                            )}\r\n                    </Dropzone>\r\n               </div>\r\n\r\n             <div className='row justify-content-center'>\r\n               <div className='wrap_uploadContainer_div'\r\n                    onDragEnter={() => this.onDragEnter()}>\r\n                              \r\n                 {/* ------- Upload container ----------- */}\r\n                              \r\n                  {!this.state.loadingUpload ? (\r\n                  <div>\r\n                        <div className='sel_dragAndDrop_div'>\r\n                          <div className='row justify-content-center'>\r\n                            <div className='sel_dragAndDrop_txt' \r\n                                 onDragStart={(e) => { e.preventDefault() }}>\r\n                                 <p>Select image</p>\r\n                                 <p>OR</p>\r\n                                 <p>Drag & drop</p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='wrap_upload_process'>\r\n                            <div className='row justify-content-center'>\r\n                              <form onChange={(e) => this.handleFormChange(e)}> \r\n                                <input className='input_file' \r\n                                       id='input_file' \r\n                                       type='file' \r\n                                       accept=\"image/*\"></input>\r\n                                <label htmlFor='input_file' \r\n                                       onDragStart={(e) => { e.preventDefault() }} \r\n                                       onClick={() => this.browseImageHandler()} \r\n                                       className='browse_button'>Browse image</label>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <div className='row justify-content-center'>\r\n                                <span className='max_size_txt' \r\n                                      onDragStart={(e) => { e.preventDefault() }}>Max size: 10MB</span>\r\n                            </div>\r\n                        </div>\r\n                 </div>\r\n                 ) : ('')}\r\n               \r\n                \r\n                \r\n                {/* ------------ Preview div -------- */}\r\n\r\n                {this.state.loadingUpload ? (\r\n                  <div className='row justify-content-center'>\r\n                    <div className='wrap_preview_cont'>\r\n\r\n                          <div className='row justify-content-center'>\r\n                            <span className='uploading_txt_percent'>Uploading image (\r\n                                <span className='up_txt_per_din'>\r\n                                  </span> complete)</span>\r\n                          </div>\r\n\r\n                            <div className='row justify-content-center'>\r\n                                  <span className='cancel_upload_button' \r\n                                        title='Remove' \r\n                                        alt='Remove' \r\n                                        onClick={() => this.cancelUpload()}>&times;</span>\r\n\r\n                                  <span className='upload_percent'></span>\r\n\r\n                                  <div className='wrap_preview_image'>\r\n                                      <div className='row justify-content-center'>\r\n                                        <span className='loading_percent_slider'></span>\r\n                                        <img className='preview_upload_img' alt=''></img>\r\n                                      </div>\r\n                                  </div>\r\n                            </div>\r\n\r\n                            <div className='row justify-content-center'>\r\n                                <div className='upload_button' \r\n                                     onClick={(e) => this.formHandler(e)}>\r\n                                     Upload\r\n                                </div>\r\n                            </div>\r\n                  </div>\r\n                </div>\r\n              ):('')}\r\n\r\n            \r\n              </div>\r\n            </div>\r\n              \r\n              {/* ------- Dropzone 'Drop image here' message container ----------- */}\r\n\r\n                   <div className='row justify-content-center'>\r\n                      <div className='drop_img_here_img' \r\n                           onDragEnter={() => this.onDragEnter()}>\r\n                         <div className='row justify-content-center'>\r\n                            <h3 className='drop_img_here_txt'>\r\n                              Drop image here\r\n                            </h3>\r\n                          </div>\r\n                       </div>\r\n                  </div>\r\n\r\n          </div>\r\n\r\n      )\r\n    }\r\n}\r\n\r\nconst UploadContainer = connect(null, mapDispatchToProps)(connectedUploadContainer);\r\n\r\nexport default UploadContainer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport '../css/getImgLink.css';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { imgURL: state.imgURL };\r\n   \r\n};\r\n\r\nclass ConnectedImgLink extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tlink: this.props.imgURL\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\ncopyTextMsg() {\r\n\tlet linkCopiedTxt = document.querySelector('.link_copied');\r\n\r\n\t// display 'link copied' message after clicking on the input link\r\n\tlinkCopiedTxt.style.display = 'block';\r\n\r\n\tsetTimeout(function() {\r\n\t\tlinkCopiedTxt.style.opacity = '1';\r\n\t},200);\r\n\tsetTimeout(function() {\r\n\t\tlinkCopiedTxt.style.opacity = '0';\r\n\t},900);\r\n\tsetTimeout(function() {\r\n\t\tlinkCopiedTxt.style.display = 'none';\r\n\t},1400);\r\n\r\n}\r\n\r\nhandleFocus(e){\r\ne.target.select();\r\n}\r\n\r\n \r\nopenImg() {\r\nwindow.open(this.state.link, '_blank');\r\n}\r\n\r\n\trender() {\r\n\r\n\t\tlet ViewerLink = this.state.link;\r\n\t\tlet HTMLThumblinked = '<a href=\"'+this.state.link+'\"><img src=\"'+this.state.link+'\" alt=\"View Image\" border=\"0\"></a>';\r\n\t\tlet HTMLFullLinked = '<a href=\"'+this.state.link+'/\"><img src=\"'+this.state.link+'\" alt=\"View image\" border=\"0\"></a>';\r\n\t\tlet BBCodeLinked = '[url='+this.state.link+'/]'+'[img]'+this.state.link+'[/img][/url]';\r\n\t\tlet BBCodeThumbLinked = '[url='+this.state.link+'/]'+'[img]'+this.state.link+'[/img][/url]';\r\n\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t\t<div className='getimglink_container col-12'>\r\n\t\t\t\t\t\t<div className='row justify-content-center'>\r\n\t\t\t\t\t\t\t\t<div className='getimg_half col-12 col-sm-12 col-md-12 col-lg-12 col-xl-5'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='row justify-content-center'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='wrap_up_and_img_complete'>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='span_uploaded_txt'>Upload complete</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='span_up_img'></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='row justify-content-center'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='getimglink_view_image_div'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={this.state.link} alt='' onClick={() => this.openImg()}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='getimg_half col-12 col-sm-12 col-md-12 col-lg-12 col-xl-7'>\r\n\t\t\t\t\t\t\t\t\t<div className='row justify-content-center'>\r\n\t\t\t\t\t\t\t\t\t\t<span className='embed_codes_txt'>Choose one of the codes below to publish your image on a forum, blog or website.</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='row justify-content-center'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='copy_link_div col-11 col-md-10 '>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='row justify-content-center'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='title_copy_link mr-auto'>Viewer link</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <CopyToClipboard text={ViewerLink}\r\n\t\t\t\t\t\t\t\t\t\t\t\t \t onCopy={() => this.copyTextMsg()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input className='getlink_input col-12' readOnly type='text' onClick={(e) => this.handleFocus(e)} value={ViewerLink}></input>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </CopyToClipboard>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='row justify-content-center'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='title_copy_link mr-auto'>HTML full linked</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={HTMLFullLinked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCopy={() => this.copyTextMsg()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t \t\t<input className='getlink_input col-12' readOnly type='text' onClick={(e) => this.handleFocus(e)} value={HTMLFullLinked}></input>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='row justify-content-center'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='title_copy_link mr-auto'>HTML thumbnail linked</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={HTMLThumblinked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCopy={() => this.copyTextMsg()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input className='getlink_input col-12' readOnly type='text' onClick={(e) => this.handleFocus(e)} value={HTMLThumblinked}></input>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='row justify-content-center'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='title_copy_link mr-auto'>BBCode full linked</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={BBCodeLinked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCopy={() => this.copyTextMsg()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t \t\t<input className='getlink_input col-12' readOnly type='text' onClick={(e) => this.handleFocus(e)} value={BBCodeLinked}></input>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='row justify-content-center'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='title_copy_link mr-auto'>BBCode thumbnail linked</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyToClipboard text={BBCodeThumbLinked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCopy={() => this.copyTextMsg()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t \t\t<input className='getlink_input col-12' readOnly type='text' onClick={(e) => this.handleFocus(e)} value={BBCodeThumbLinked}></input>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='link_copied'>> Link copied!</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n \r\n\r\n\r\nconst GetImgLink = connect(mapStateToProps)(ConnectedImgLink);\r\n\r\n\r\n\r\nexport default GetImgLink;","import React from 'react';\r\nimport '../css/NavBar.css';\r\nimport '../js/script';\r\n\r\n\r\n\r\n\r\n\r\nclass NavBar extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { \r\n            openAbout: false\r\n        \r\n          }\r\n  }\r\n\r\n \r\n\r\n \r\nopenAbout() {\r\n  let aboutMenu = document.querySelector('.about_menu');\r\n\r\n\r\n  if(aboutMenu.style.display === 'inline-table') {\r\n    aboutMenu.style.display = 'none';\r\n  } else {\r\n    aboutMenu.style.display = 'inline-table';\r\n  }\r\n}\r\n\r\n\r\nopenTermsOfUse() {\r\n  let termsModal = document.querySelector('.terms_modal');\r\n  let aboutMenu = document.querySelector('.about_menu');\r\n     // close about menu after click\r\n    aboutMenu.style.display = 'none';\r\n      // open terms modal\r\n    termsModal.style.display = 'block';\r\n   \r\n}\r\n\r\n  render() {\r\n\r\n    return (\r\n          <div>\r\n            <div className='row justify-content-center'>\r\n              <div className='navbar_container col-12'>\r\n                <div className='row'>\r\n                \r\n                  <div className='about_div'>\r\n                       <span className='about_button' onDragStart={(e) => { e.preventDefault() }} onClick={() => this.openAbout()}>About <span>&#9662;</span></span>   \r\n                       <div className='about_menu'>\r\n                          <span className='sub_menu sub_menu_terms col-12' onClick={() => this.openTermsOfUse()}>Terms of use</span>\r\n                          <span className='sub_menu col-12' onDragStart={(e) => { e.preventDefault() }}>Contact:</span>\r\n                          <span className='contact_sub_span col-12' onDragStart={(e) => { e.preventDefault() }}>contact@ionutdev.com</span>\r\n                    \r\n                            <span className='contact_sub_span col-12' onDragStart={(e) => { e.preventDefault() }}>\r\n                             <a href='https://www.ionutdev.com'>\r\n                            www.ionutdev.com\r\n                            </a>\r\n                            </span>\r\n  \r\n                       </div>\r\n                  </div>\r\n              \r\n\r\n                  <div className='navbar_logo' onDragStart={(e) => { e.preventDefault() }}>\r\n                      <span className='logo_img'>\r\n                          <a href='https://ionutdev.com/sionut0122/imgfbhost'>\r\n                        <img src={require('../images/logo_img.jpg')} alt=''/>\r\n                        </a>\r\n                      </span>\r\n                      <span className='logo_txt'>imgFBHost</span>\r\n                  </div>\r\n                \r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n      )\r\n  }\r\n}\r\n \r\nexport default NavBar;\r\n","import React from 'react';\r\nimport '../css/Terms.css';\r\n\r\n\r\n\r\nclass Terms extends React.Component {\r\n  \r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n  }\r\n\r\n\r\n closeTermsOfUse() {\r\n  let termsModal = document.querySelector('.terms_modal');\r\n\r\n    termsModal.style.display = 'none';\r\n   \r\n}\r\n\r\nrender() {\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t  \r\n\t\t        <div className='row justify-content-center'>\r\n\t\t         \t <div className='terms_of_service col-11 col-md-7 col-lg-5'>\r\n\r\n\t\t         \t \t\t\t<span className='ml-auto' onClick={() => this.closeTermsOfUse()}>&#10006;</span>\r\n\t\t\t\t\t\t\t\t<span>Terms of use</span>\r\n\t\t\t\t\t\t\t\t<span>1. Use of this service means acceptance of all the rules written here, as well as the voluntary consent of the user to assume the obligation to comply with them.</span>\r\n\t\t\t\t\t\t\t\t<span>2. The publication of images is made by the user on his own initiative, the service is not responsible for the correctness and reliability of the information reported by the user;</span>\r\n\t\t\t\t\t\t\t\t<span>3. Service is not responsible for the observance of copyright on posted images, but warns users about the need to take into account and comply with its norms.</span>\r\n\t\t\t\t\t\t\t\t<span>4. Users who repeatedly violated these Rules will be blocked access to the service.</span>\r\n\t\t\t\t\t\t\t\t<span>5. It is prohibited to place materials that violate the legislation of the USA and EU countries.</span>\r\n\t\t\r\n\t\t\t\t\t </div>\r\n\t\t      \t</div>\r\n\t\t\r\n\r\n\t\t</div>\r\n \r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Terms;","import React from 'react';\nimport UploadContainer from './UploadContainer';\nimport GetImgLink from './GetImgLink';\nimport NavBar from './NavBar';\nimport Terms from './Terms';\nimport { connect } from \"react-redux\";\nimport { addImage } from '../actions/index';\nimport '../js/script';\nimport '../css/Main.css';\n\n\n\n function mapDispatchToProps(dispatch) {\n  return {\n    addImage: img => dispatch(addImage(img))\n  };\n}\n\n\n const mapStateToProps = state => {\n  return {  imgURL: state.imgURL\n\n        };\n   \n};\n\n\n\n\nclass ConnectedApp extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = { \n          imgURL: this.props.imgURL,\n          openTerms: false,\n        \n          }\n  }\n\n \n\n \ncloseModal() {\n   let wrong_format_bgdrop = document.querySelector('.wrong_format_bgdrop');\n   let maxSizeModalTxt = document.querySelector('.invalid_imgsize_big');\n  \n      // display wrong format modal\n    wrong_format_bgdrop.style.display = 'none';\n      // display img size modal text alert\n    maxSizeModalTxt.style.display = 'none';\n\n       \n \n      \n}\n\ncheckAboutMenu() {\n    let aboutMenu = document.querySelector('.about_menu');\n\n      // close about menu\n    aboutMenu.style.display = 'none';\n \n\n}\n\n  render() {\n\n    return (\n          <div>\n             <div className='container-fluid container'>\n        \n\n\n               {/* ------ NavBar Container Component ------ */}\n\n               <div className='row justify-content-center'>\n                  <div className='wrap_header col-12'>\n                        <NavBar />\n                  </div>\n               </div>\n\n\n\n                {/* ------ Wrong Format Container Component ------ */}\n\n                <div className='row justify-content-center'>\n                   <div className='wrong_format_bgdrop'>\n                      <div className='row justify-content-center'>\n                     \n                        <div className='wrong_format_div col-11 col-sm-8 col-md-6 col-lg-4 col-xl-4'>\n                            <div className='row justify-content-center'>\n                                <div className='img_cann_added col-10'>\n                                    <span className='mr-auto'>Image cannot be added</span>\n                                    <span className='close_error_modal ml_auto' onClick={() => this.closeModal()}>&#10006;</span>\n                                  </div>\n                            </div>\n\n                             <div className='row justify-content-center'>\n                                <div className='invalid_format_txt col-10'>\n                                  <span className='invalid_format_name'></span> \n                                    - Invalid or unsupported file format.\n                                </div>\n                             </div>\n\n                             <div className='row justify-content-center'>\n                               <div className='invalid_imgsize_big col-10'>Maximum file size: 10mb</div>\n                             </div>\n                        </div>\n                    \n                        </div>\n                     </div>\n                </div>\n     \n\n           {/* ------ Terms Container Component ------ */}\n\n\n            <div className='row justify-content-center'>\n                <div className='terms_modal col-11'>\n                      <Terms />\n                </div>\n            </div>\n          \n\n\n            <div className='row justify-content-center'>\n                 <div className='wrap_middle col-12 col-md-10 col-lg-9 col-xl-9' onClick={() => this.checkAboutMenu()}>\n                      <div className='row justify-content-center'>\n\n\n                  {/* -------- Middle logo container -------- */}\n\n                      <div className='middle_logo_container col-12'>\n                          <div className='row justify-content-center'>\n                              <div className='allowed_format_div col-12'>\n                                  <div className='ml-auto wrap_allowed_txt' onDragStart={(e) => { e.preventDefault() }}>\n                                        jpg jpeg png gif bmp\n                                  </div>\n                              </div>\n                       \n                              <div className='middle_logo_img'>\n                                <div className='row justify-content-center'>\n                                    <span></span>\n                                    <span></span>\n                                </div>\n                              </div>\n   \n                      </div>\n                       \n                        <div className='row justify-content-center'>\n                           {this.props.imgURL ? (\n                          <a href='#'>\n                            <span className='back_button' title='Back to main page'>\n                              <a href='https://ionutdev.com/sionut0122/imgfbhost'>\n                                &#171; Upload more\n                              </a>\n                            </span>\n                          </a>\n                              ) : ('')}\n                        </div>\n                      </div>\n\n\n\n                       \n                    {/* ------ Upload + GetLink Container Component ------ */}\n\n\n                      <div className='wrap_upload_container col-12'>\n                        <div className='row justify-content-center'>\n                          <div className='col-12'>\n                              \n                              {!this.props.imgURL ? (\n                                  <UploadContainer />\n                                ) : ('')}\n                              \n                              {this.props.imgURL ? (\n                                  <GetImgLink />\n                                ) : ('')}\n                           \n                           </div>\n                        </div>\n                      </div>\n\n\n\n                     </div>\n                  </div>\n                </div>\n           \n\n\n                   <div className='row justify-content-center'>\n                      <span className='allrights_txt'>©2019\n                        <a href='https://www.ionutdev.com'> \n                           ionutdev.com \n                        </a>\n                       - All rights reserved.</span> \n                   </div>\n          \n             </div>\n          </div>\n\n      )\n  }\n}\n\n const Main = connect(mapStateToProps,mapDispatchToProps)(ConnectedApp);\n\nexport default Main;\n","    import { ADD_IMAGE } from \"./constants/action-types\";\r\n \r\n\r\n    \r\n    const initialState = {\r\n          imgURL: '',\r\n          loadingUpload: false,\r\n          imgOriginName: '',\r\n          unsupportedFormat: false,\r\n    };\r\n\r\n\r\n\r\n    function rootReducer(state = initialState, action) {\r\n      if (action.type === ADD_IMAGE) {\r\n        return Object.assign({}, state, {\r\n          loadingUpload: action.payload.loadingUpload,\r\n          imgURL: action.payload.imgURL,\r\n          imgOriginName: action.payload.imgOriginName,\r\n          unsupportedFormat: action.payload.unsupportedFormat\r\n        });\r\n\r\n        console.log(initialState);\r\n      }\r\n\r\n      return state;\r\n    }\r\n\r\n\r\n\r\n    export default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n \r\n \r\n const store = createStore(\r\n   rootReducer, /* preloadedState, */\r\n   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n\r\n\r\n\r\n\r\nexport default store;","   import store from \"../store\";\r\n    window.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './components/Main';\n \n \n\nimport './js/index';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Main />\n\t</Provider>, \n\n\tdocument.getElementById('root')\n\t);\n "],"sourceRoot":""}